/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import backEnd.files.ManejadorArchivo;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.IOException;
import java.util.LinkedList;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author orlan
 */
public class Principal extends javax.swing.JFrame {

    String path = "";

    ManejadorArchivo fileManager;
    LinkedList<codeEditor> windows = new LinkedList<>();

    /**
     * Creates new form Principal
     */
    public Principal() {

        this.fileManager = new ManejadorArchivo();
        initComponents();

        this.addWindowListener(new WindowAdapter() {
            public void windowClosing(WindowEvent e) {
                if (needSaveAnyWindow()) {
                    askSaveAllWindows();
                } else {
                    System.exit(0);
                }
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        proyectTabsTabbedPane = new javax.swing.JTabbedPane();
        jMenuBar1 = new javax.swing.JMenuBar();
        fileMenu = new javax.swing.JMenu();
        OpenMenuItem = new javax.swing.JMenuItem();
        guardarMenuItem = new javax.swing.JMenuItem();
        saveAsMenuItem = new javax.swing.JMenuItem();
        SaveAllMenuItem = new javax.swing.JMenuItem();
        nuevoMenuItem = new javax.swing.JMenuItem();
        ayudaMenu = new javax.swing.JMenu();
        acercaDeMenuItem = new javax.swing.JMenuItem();
        jMenu1 = new javax.swing.JMenu();
        CloseMenuItem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Editor de Codigo");

        fileMenu.setText(" Archivo ");

        OpenMenuItem.setText("Abrir");
        OpenMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OpenMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(OpenMenuItem);

        guardarMenuItem.setText("Guardar");
        guardarMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guardarMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(guardarMenuItem);

        saveAsMenuItem.setText("Guarda Como");
        saveAsMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveAsMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(saveAsMenuItem);

        SaveAllMenuItem.setText("Guardar todo");
        SaveAllMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveAllMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(SaveAllMenuItem);

        nuevoMenuItem.setText("Nuevo");
        nuevoMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nuevoMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(nuevoMenuItem);

        jMenuBar1.add(fileMenu);

        ayudaMenu.setText(" Ayuda ");

        acercaDeMenuItem.setText("Acerca de");
        acercaDeMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                acercaDeMenuItemActionPerformed(evt);
            }
        });
        ayudaMenu.add(acercaDeMenuItem);

        jMenuBar1.add(ayudaMenu);

        jMenu1.setText("Cerrar Ventana");

        CloseMenuItem.setText("Cerrar");
        CloseMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CloseMenuItemActionPerformed(evt);
            }
        });
        jMenu1.add(CloseMenuItem);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(proyectTabsTabbedPane, javax.swing.GroupLayout.DEFAULT_SIZE, 1260, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(proyectTabsTabbedPane, javax.swing.GroupLayout.DEFAULT_SIZE, 677, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void OpenMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OpenMenuItemActionPerformed
        JFileChooser dialogo = new JFileChooser();
        dialogo.setDialogTitle("Open file");
        if (dialogo.showOpenDialog(null) == JFileChooser.APPROVE_OPTION) {
            path = dialogo.getSelectedFile().getAbsolutePath();
            try {
                codeEditor wind = new codeEditor(path);
                wind.setText(fileManager.lecturaArchivo(path));
                proyectTabsTabbedPane.add(fileManager.nameFile(path), wind);
                windows.add(wind);
            } catch (IOException e) {
                System.out.println(e);
            }
        }
    }//GEN-LAST:event_OpenMenuItemActionPerformed

    private void guardarMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guardarMenuItemActionPerformed
        try {
            if (needToSave()) {
                saveChanges();
            }
        } catch (IOException e) {
            showError(String.valueOf(e));
        }
    }//GEN-LAST:event_guardarMenuItemActionPerformed

    private void acercaDeMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_acercaDeMenuItemActionPerformed
        JOptionPane.showMessageDialog(this, "Angel Racancoj\nCarnet: 201631547\nPractica Compiladores 2\nEditor de Imagenes V0.1", "Acerca de", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_acercaDeMenuItemActionPerformed

    private void SaveAllMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveAllMenuItemActionPerformed
        saveAllChanges();
    }//GEN-LAST:event_SaveAllMenuItemActionPerformed

    private void CloseMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CloseMenuItemActionPerformed
        try {
            if (needToSave()) {
                codeEditor window = (codeEditor) this.proyectTabsTabbedPane.getSelectedComponent();
                int confirm = JOptionPane.showOptionDialog(null, "Desea salir sin guardar los cambios en " + fileManager.nameFile(window.getPath()), "Salir", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, null, null, null);
                if (confirm != 0) {
                    saveChanges();
                }
                this.proyectTabsTabbedPane.remove(this.proyectTabsTabbedPane.getSelectedComponent());
            } else {
                this.proyectTabsTabbedPane.remove(this.proyectTabsTabbedPane.getSelectedComponent());
            }
        } catch (IOException e) {
            showError(String.valueOf(e));
        }
    }//GEN-LAST:event_CloseMenuItemActionPerformed

    private void nuevoMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nuevoMenuItemActionPerformed
        JFileChooser guardar = new JFileChooser();
        guardar.setDialogTitle("Create file");
        if (guardar.showSaveDialog(null) == JFileChooser.APPROVE_OPTION) {
            path = guardar.getSelectedFile().getAbsolutePath();
            System.out.println(path);
            try {
                fileManager.guardarArchivo(path, "");
                codeEditor wind = new codeEditor(path);
                proyectTabsTabbedPane.add(fileManager.nameFile(path), wind);
                windows.add(wind);
            } catch (IOException e) {
                System.out.println(e);
            }
        }
    }//GEN-LAST:event_nuevoMenuItemActionPerformed

    private void saveAsMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveAsMenuItemActionPerformed
        codeEditor auxCE = (codeEditor) this.proyectTabsTabbedPane.getSelectedComponent();
        JFileChooser guardar = new JFileChooser();
        guardar.setDialogTitle("Nuevo Archivo");
        if (guardar.showSaveDialog(null) == JFileChooser.APPROVE_OPTION) {
            path = guardar.getSelectedFile().getAbsolutePath();
            System.out.println(path);
            try {
                fileManager.guardarArchivo(path, auxCE.returnText());
                codeEditor wind = new codeEditor(path);
                proyectTabsTabbedPane.add(fileManager.nameFile(path), wind);
                windows.add(wind);
            } catch (IOException e) {
                System.out.println(e);
            }
        }
    }//GEN-LAST:event_saveAsMenuItemActionPerformed

    private boolean needToSave() throws IOException {
        codeEditor auxCE = (codeEditor) this.proyectTabsTabbedPane.getSelectedComponent();
        return (!fileManager.lecturaArchivo(auxCE.getPath()).equals(auxCE.returnText()));
    }

    private void saveChanges() throws IOException {
        codeEditor auxCE = (codeEditor) this.proyectTabsTabbedPane.getSelectedComponent();
        fileManager.guardarArchivo(auxCE.getPath(), auxCE.returnText());
    }

    private void saveChanges(codeEditor CD) throws IOException {
        fileManager.guardarArchivo(CD.getPath(), CD.returnText());
    }

    private void showError(String error) {
        JOptionPane.showMessageDialog(this, error, "Error", JOptionPane.ERROR_MESSAGE);
    }

    private void askSaveAllWindows() {
        try {
            for (codeEditor window : windows) {
                if (!fileManager.lecturaArchivo(window.getPath()).equals(window.returnText())) {
                    int confirm = JOptionPane.showOptionDialog(null, "Desea guardar los cambios en " + fileManager.nameFile(window.getPath()), "Salir", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, null, null, null);
                    if (confirm == 0) {
                        saveChanges(window);
                    }
                }
            }
            System.exit(0);
        } catch (IOException e) {
            showError(String.valueOf(e));
        }
    }

    private boolean needSaveAnyWindow() {
        try {
            for (codeEditor window : windows) {
                if (!fileManager.lecturaArchivo(window.getPath()).equals(window.returnText())) {
                    return true;
                }
            }
        } catch (IOException e) {
            showError(String.valueOf(e));
        }
        return false;
    }

    private void saveAllChanges() {
        try {
            for (codeEditor window : windows) {
                if (!fileManager.lecturaArchivo(window.getPath()).equals(window.returnText())) {
                    saveChanges(window);
                }
            }
        } catch (IOException e) {
            showError(String.valueOf(e));
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem CloseMenuItem;
    private javax.swing.JMenuItem OpenMenuItem;
    private javax.swing.JMenuItem SaveAllMenuItem;
    private javax.swing.JMenuItem acercaDeMenuItem;
    private javax.swing.JMenu ayudaMenu;
    private javax.swing.JMenu fileMenu;
    private javax.swing.JMenuItem guardarMenuItem;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem nuevoMenuItem;
    private javax.swing.JTabbedPane proyectTabsTabbedPane;
    private javax.swing.JMenuItem saveAsMenuItem;
    // End of variables declaration//GEN-END:variables

}
